/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { Type } from "class-transformer";
import { CommentUpdateManyWithoutPostsInput } from "./CommentUpdateManyWithoutPostsInput";
import { LikeUpdateManyWithoutPostsInput } from "./LikeUpdateManyWithoutPostsInput";
import { MediaUpdateManyWithoutPostsInput } from "./MediaUpdateManyWithoutPostsInput";

@InputType()
class PostUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  author?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authorName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authorProfilePicture?: string | null;

  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  category?: CategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutPostsInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutPostsInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutPostsInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutPostsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  content?: string | null;

  @ApiProperty({
    required: false,
    type: () => LikeUpdateManyWithoutPostsInput,
  })
  @ValidateNested()
  @Type(() => LikeUpdateManyWithoutPostsInput)
  @IsOptional()
  @Field(() => LikeUpdateManyWithoutPostsInput, {
    nullable: true,
  })
  likes?: LikeUpdateManyWithoutPostsInput;

  @ApiProperty({
    required: false,
    type: () => MediaUpdateManyWithoutPostsInput,
  })
  @ValidateNested()
  @Type(() => MediaUpdateManyWithoutPostsInput)
  @IsOptional()
  @Field(() => MediaUpdateManyWithoutPostsInput, {
    nullable: true,
  })
  mediaItems?: MediaUpdateManyWithoutPostsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;
}

export { PostUpdateInput as PostUpdateInput };
